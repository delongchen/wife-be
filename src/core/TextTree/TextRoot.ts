import { TextNode } from './TextNode'

const h = TextNode.getInstance

const TextRoot = h('What is font-end',
[
  h('编程基础', [
    h('计算机基础', [
      h('计算机组成原理', ['冯诺依曼结构', '二进制', '算术和逻辑运算', '各级存储器的区别']),
      h('操作系统', ['进程和线程', 'CPU调度算法', '内存管理', '文件系统和IO']),
      h('汇编语言', ['寄存器和内存模型', '堆栈模型', 'CPU指令']),
      h('编译原理', ['编译器流程', 'AST']),
      h('计算机网络', ['TCP/IP', 'UDP', 'DNS', 'HTTP']),
      h('编码', ['ASCII', 'unicode字符集', 'UTF-8 / UTF-16']),
    ]),
    h('数据结构', [
      '结构化与非结构化的思维，重要！',
      h('逻辑结构与代码表现(未完)', [
        '栈（逻辑结构）可用数组（代码）表示',
        '栈（逻辑结构）可用链表（代码）表示',
        '队列（逻辑结构）可用数组（代码）表示',
        '树（逻辑结构）可用对象（代码）表示'
      ]),
      h('线性结构', ['向量(长度不可变)', '链表', '栈', '队列']),
      h('树', [
        '一般树',
        '二叉树',
        h('搜索树', ['AVL树', '红黑树', 'B树']),
      ]),
      h('优先级队列', '堆'),
      '散列表',
      '图'
    ]),
    h('算法', [
      '复杂度',
      h('算法思想', ['二分', '贪心', '动态规划']),
      '递归',
      h('常用算法', [
        h('线性结构', ['查找', '排序', '增/删']),
        h('树', ['遍历', '增/删']),
        h('图', ['搜索', '最短路径']),
        h('字符串', ['KMP算法', '前缀匹配'])
      ]),
      'leetcode'
    ]),
    h('编程模式', [
      h('面向对象OOP', ['类和对象', '三要素（继承、封装、多态）', 'UML 类图']),
      '面向切面编程 AOP',
      h('函数式编程 FP', ['高级函数', '纯函数', 'curry', 'compose'])
    ]),
    h('设计', [
      'SOLID 设计原则',
      h('常见设计模式', ['工厂模式', '单例模式', '观察者模式', '发布订阅', '装饰器']),
      'MVC/MVVM'
    ])
  ]),
  h('语法和API', [
    h('业界标准', ['W3C', 'ECMA-262']),
    'XML',
    h('HTML', [
      '基础标签',
      '媒体标签',
      h('图形标签', ['SVG', 'Canvas'])
    ]),
    h('CSS', [
      '理解“流” - CSS 的设计核心',
      '基础的图文样式',
      h('布局', [
        'inline block 和 inline-block',
        '盒模型',
        'margin相关',
        'flex',
        'float布局',
        'BFC'
      ]),
      h('定位', ['relative', 'absolute', 'fixed', '定位上下文']),
      h('响应式', ['viewport', 'rem', 'vw/vh']),
      h('css3', ['渐变', '动画']),
      '字体 iconfont',
      h('模块化', ['BEM', 'css-in-js'])
    ]),
    h('ES语法', [
      '变量，表达式，函数等基础语法',
      h('作用域', ['自由变量', '闭包', 'this']),
      'class和继承',
      '原型',
      h('异步编程', [
        'Promise',
        'async/await',
        '微任务和宏任务',
        'event loop模型'
      ]),
    ])
  ])
]).addID()

export { TextRoot }